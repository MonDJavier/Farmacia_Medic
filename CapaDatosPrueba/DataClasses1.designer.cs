#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatosPrueba
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bd_farmacia")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Inserttbl_Ajuste(tbl_Ajuste instance);
    partial void Updatetbl_Ajuste(tbl_Ajuste instance);
    partial void Deletetbl_Ajuste(tbl_Ajuste instance);
    partial void Inserttbl_Categoria(tbl_Categoria instance);
    partial void Updatetbl_Categoria(tbl_Categoria instance);
    partial void Deletetbl_Categoria(tbl_Categoria instance);
    partial void Inserttbl_Cliente(tbl_Cliente instance);
    partial void Updatetbl_Cliente(tbl_Cliente instance);
    partial void Deletetbl_Cliente(tbl_Cliente instance);
    partial void Inserttbl_Compra(tbl_Compra instance);
    partial void Updatetbl_Compra(tbl_Compra instance);
    partial void Deletetbl_Compra(tbl_Compra instance);
    partial void Inserttbl_detalleAjuste(tbl_detalleAjuste instance);
    partial void Updatetbl_detalleAjuste(tbl_detalleAjuste instance);
    partial void Deletetbl_detalleAjuste(tbl_detalleAjuste instance);
    partial void Inserttbl_detalleCompra(tbl_detalleCompra instance);
    partial void Updatetbl_detalleCompra(tbl_detalleCompra instance);
    partial void Deletetbl_detalleCompra(tbl_detalleCompra instance);
    partial void Inserttbl_detalleVenta(tbl_detalleVenta instance);
    partial void Updatetbl_detalleVenta(tbl_detalleVenta instance);
    partial void Deletetbl_detalleVenta(tbl_detalleVenta instance);
    partial void Inserttbl_Empleado(tbl_Empleado instance);
    partial void Updatetbl_Empleado(tbl_Empleado instance);
    partial void Deletetbl_Empleado(tbl_Empleado instance);
    partial void Inserttbl_Laboratorio(tbl_Laboratorio instance);
    partial void Updatetbl_Laboratorio(tbl_Laboratorio instance);
    partial void Deletetbl_Laboratorio(tbl_Laboratorio instance);
    partial void Inserttbl_Medicamento(tbl_Medicamento instance);
    partial void Updatetbl_Medicamento(tbl_Medicamento instance);
    partial void Deletetbl_Medicamento(tbl_Medicamento instance);
    partial void Inserttbl_Proveedor(tbl_Proveedor instance);
    partial void Updatetbl_Proveedor(tbl_Proveedor instance);
    partial void Deletetbl_Proveedor(tbl_Proveedor instance);
    partial void Inserttbl_Ubicacion(tbl_Ubicacion instance);
    partial void Updatetbl_Ubicacion(tbl_Ubicacion instance);
    partial void Deletetbl_Ubicacion(tbl_Ubicacion instance);
    partial void Inserttbl_Venta(tbl_Venta instance);
    partial void Updatetbl_Venta(tbl_Venta instance);
    partial void Deletetbl_Venta(tbl_Venta instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CapaDatosPrueba.Properties.Settings.Default.bd_farmaciaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Ajuste> tbl_Ajuste
		{
			get
			{
				return this.GetTable<tbl_Ajuste>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Categoria> tbl_Categoria
		{
			get
			{
				return this.GetTable<tbl_Categoria>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Cliente> tbl_Cliente
		{
			get
			{
				return this.GetTable<tbl_Cliente>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Compra> tbl_Compra
		{
			get
			{
				return this.GetTable<tbl_Compra>();
			}
		}
		
		public System.Data.Linq.Table<tbl_detalleAjuste> tbl_detalleAjuste
		{
			get
			{
				return this.GetTable<tbl_detalleAjuste>();
			}
		}
		
		public System.Data.Linq.Table<tbl_detalleCompra> tbl_detalleCompra
		{
			get
			{
				return this.GetTable<tbl_detalleCompra>();
			}
		}
		
		public System.Data.Linq.Table<tbl_detalleVenta> tbl_detalleVenta
		{
			get
			{
				return this.GetTable<tbl_detalleVenta>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Empleado> tbl_Empleado
		{
			get
			{
				return this.GetTable<tbl_Empleado>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Laboratorio> tbl_Laboratorio
		{
			get
			{
				return this.GetTable<tbl_Laboratorio>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Medicamento> tbl_Medicamento
		{
			get
			{
				return this.GetTable<tbl_Medicamento>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Proveedor> tbl_Proveedor
		{
			get
			{
				return this.GetTable<tbl_Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Ubicacion> tbl_Ubicacion
		{
			get
			{
				return this.GetTable<tbl_Ubicacion>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Venta> tbl_Venta
		{
			get
			{
				return this.GetTable<tbl_Venta>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarCategoria")]
		public int eliminarCategoria([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cat_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cat_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarCliente")]
		public int eliminarCliente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cli_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cli_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarEmpleado")]
		public int eliminarEmpleado([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_ci)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_ci);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarLaboratorio")]
		public int eliminarLaboratorio([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lab_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lab_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarMedicamento")]
		public int eliminarMedicamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> med_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), med_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.eliminarProveedor")]
		public int eliminarProveedor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> prove_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prove_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarCategoria")]
		public int insertarCategoria([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cat_nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cat_nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarCliente")]
		public int insertarCliente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string cli_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_paterno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_materno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cli_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cli_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_correo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cli_nombre, cli_paterno, cli_materno, cli_direccion, cli_telefono, cli_correo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarDetalleVenta")]
		public int insertarDetalleVenta([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> med_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> dve_precio, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dve_cantidad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), med_cod, dve_precio, dve_cantidad);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarEmpleado")]
		public int insertarEmpleado([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string emp_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string emp_paterno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string emp_materno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_contraseña)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_nombre, emp_paterno, emp_materno, emp_direccion, emp_telefono, emp_contraseña);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarLaboratorio")]
		public int insertarLaboratorio([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string lab_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_web)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lab_nombre, lab_direccion, lab_telefono, lab_email, lab_web);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarProveedor")]
		public int insertarProveedor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string prove_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string prove_nit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string prove_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string prove_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lab_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prove_nombre, prove_nit, prove_direccion, prove_telefono, lab_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarVenta")]
		public int insertarVenta([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallDateTime")] System.Nullable<System.DateTime> ven_fecha, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cli_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_ci)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ven_fecha, cli_cod, emp_ci);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificar_cliente")]
		public int modificar_cliente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cli_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string cli_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_paterno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_materno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cli_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cli_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string cli_correo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cli_cod, cli_nombre, cli_paterno, cli_materno, cli_direccion, cli_telefono, cli_correo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificar_laboratorio")]
		public int modificar_laboratorio([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lab_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string lab_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string lab_web)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lab_cod, lab_nombre, lab_direccion, lab_telefono, lab_email, lab_web);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificarCategoria")]
		public int modificarCategoria([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cat_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string cat_nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cat_cod, cat_nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificarEmpleado")]
		public int modificarEmpleado([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_ci, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string emp_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string emp_paterno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string emp_materno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string emp_contraseña)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_ci, emp_nombre, emp_paterno, emp_materno, emp_direccion, emp_telefono, emp_contraseña);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificarProveedor")]
		public int modificarProveedor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> prove_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string prove_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string prove_nit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string prove_direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string prove_telefono)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prove_cod, prove_nombre, prove_nit, prove_direccion, prove_telefono);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.mostrarEmpleado")]
		public ISingleResult<mostrarEmpleadoResult> mostrarEmpleado()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<mostrarEmpleadoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.mostrarMedicamentos")]
		public ISingleResult<mostrarMedicamentosResult> mostrarMedicamentos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<mostrarMedicamentosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertarMedicamento")]
		public int insertarMedicamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string med_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> med_precio, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> med_stock, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cat_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), med_nombre, med_precio, med_stock, cat_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modificarMedicamento")]
		public int modificarMedicamento([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> med_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string med_nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> med_precio, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> med_stock, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cat_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), med_cod, med_nombre, med_precio, med_stock, cat_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.mostrarLaboratorio")]
		public ISingleResult<mostrarLaboratorioResult> mostrarLaboratorio()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<mostrarLaboratorioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.mostrarProveedor")]
		public ISingleResult<mostrarProveedorResult> mostrarProveedor()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<mostrarProveedorResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Ajuste")]
	public partial class tbl_Ajuste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ajt_cod;
		
		private System.DateTime _ajt_fecha;
		
		private string _ajt_observacion;
		
		private EntitySet<tbl_detalleAjuste> _tbl_detalleAjuste;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onajt_codChanging(int value);
    partial void Onajt_codChanged();
    partial void Onajt_fechaChanging(System.DateTime value);
    partial void Onajt_fechaChanged();
    partial void Onajt_observacionChanging(string value);
    partial void Onajt_observacionChanged();
    #endregion
		
		public tbl_Ajuste()
		{
			this._tbl_detalleAjuste = new EntitySet<tbl_detalleAjuste>(new Action<tbl_detalleAjuste>(this.attach_tbl_detalleAjuste), new Action<tbl_detalleAjuste>(this.detach_tbl_detalleAjuste));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ajt_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ajt_cod
		{
			get
			{
				return this._ajt_cod;
			}
			set
			{
				if ((this._ajt_cod != value))
				{
					this.Onajt_codChanging(value);
					this.SendPropertyChanging();
					this._ajt_cod = value;
					this.SendPropertyChanged("ajt_cod");
					this.Onajt_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ajt_fecha", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ajt_fecha
		{
			get
			{
				return this._ajt_fecha;
			}
			set
			{
				if ((this._ajt_fecha != value))
				{
					this.Onajt_fechaChanging(value);
					this.SendPropertyChanging();
					this._ajt_fecha = value;
					this.SendPropertyChanged("ajt_fecha");
					this.Onajt_fechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ajt_observacion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ajt_observacion
		{
			get
			{
				return this._ajt_observacion;
			}
			set
			{
				if ((this._ajt_observacion != value))
				{
					this.Onajt_observacionChanging(value);
					this.SendPropertyChanging();
					this._ajt_observacion = value;
					this.SendPropertyChanged("ajt_observacion");
					this.Onajt_observacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ajuste_tbl_detalleAjuste", Storage="_tbl_detalleAjuste", ThisKey="ajt_cod", OtherKey="ajt_cod")]
		public EntitySet<tbl_detalleAjuste> tbl_detalleAjuste
		{
			get
			{
				return this._tbl_detalleAjuste;
			}
			set
			{
				this._tbl_detalleAjuste.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_detalleAjuste(tbl_detalleAjuste entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ajuste = this;
		}
		
		private void detach_tbl_detalleAjuste(tbl_detalleAjuste entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ajuste = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Categoria")]
	public partial class tbl_Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cat_cod;
		
		private string _cat_nombre;
		
		private EntitySet<tbl_Medicamento> _tbl_Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_codChanging(int value);
    partial void Oncat_codChanged();
    partial void Oncat_nombreChanging(string value);
    partial void Oncat_nombreChanged();
    #endregion
		
		public tbl_Categoria()
		{
			this._tbl_Medicamento = new EntitySet<tbl_Medicamento>(new Action<tbl_Medicamento>(this.attach_tbl_Medicamento), new Action<tbl_Medicamento>(this.detach_tbl_Medicamento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cat_cod
		{
			get
			{
				return this._cat_cod;
			}
			set
			{
				if ((this._cat_cod != value))
				{
					this.Oncat_codChanging(value);
					this.SendPropertyChanging();
					this._cat_cod = value;
					this.SendPropertyChanged("cat_cod");
					this.Oncat_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string cat_nombre
		{
			get
			{
				return this._cat_nombre;
			}
			set
			{
				if ((this._cat_nombre != value))
				{
					this.Oncat_nombreChanging(value);
					this.SendPropertyChanging();
					this._cat_nombre = value;
					this.SendPropertyChanged("cat_nombre");
					this.Oncat_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Categoria_tbl_Medicamento", Storage="_tbl_Medicamento", ThisKey="cat_cod", OtherKey="cat_cod")]
		public EntitySet<tbl_Medicamento> tbl_Medicamento
		{
			get
			{
				return this._tbl_Medicamento;
			}
			set
			{
				this._tbl_Medicamento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Medicamento(tbl_Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Categoria = this;
		}
		
		private void detach_tbl_Medicamento(tbl_Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Cliente")]
	public partial class tbl_Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cli_cod;
		
		private string _cli_nombre;
		
		private string _cli_paterno;
		
		private string _cli_materno;
		
		private string _cli_direccion;
		
		private string _cli_telefono;
		
		private string _cli_correo;
		
		private EntitySet<tbl_Venta> _tbl_Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncli_codChanging(int value);
    partial void Oncli_codChanged();
    partial void Oncli_nombreChanging(string value);
    partial void Oncli_nombreChanged();
    partial void Oncli_paternoChanging(string value);
    partial void Oncli_paternoChanged();
    partial void Oncli_maternoChanging(string value);
    partial void Oncli_maternoChanged();
    partial void Oncli_direccionChanging(string value);
    partial void Oncli_direccionChanged();
    partial void Oncli_telefonoChanging(string value);
    partial void Oncli_telefonoChanged();
    partial void Oncli_correoChanging(string value);
    partial void Oncli_correoChanged();
    #endregion
		
		public tbl_Cliente()
		{
			this._tbl_Venta = new EntitySet<tbl_Venta>(new Action<tbl_Venta>(this.attach_tbl_Venta), new Action<tbl_Venta>(this.detach_tbl_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cli_cod
		{
			get
			{
				return this._cli_cod;
			}
			set
			{
				if ((this._cli_cod != value))
				{
					this.Oncli_codChanging(value);
					this.SendPropertyChanging();
					this._cli_cod = value;
					this.SendPropertyChanged("cli_cod");
					this.Oncli_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_nombre", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cli_nombre
		{
			get
			{
				return this._cli_nombre;
			}
			set
			{
				if ((this._cli_nombre != value))
				{
					this.Oncli_nombreChanging(value);
					this.SendPropertyChanging();
					this._cli_nombre = value;
					this.SendPropertyChanged("cli_nombre");
					this.Oncli_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_paterno", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string cli_paterno
		{
			get
			{
				return this._cli_paterno;
			}
			set
			{
				if ((this._cli_paterno != value))
				{
					this.Oncli_paternoChanging(value);
					this.SendPropertyChanging();
					this._cli_paterno = value;
					this.SendPropertyChanged("cli_paterno");
					this.Oncli_paternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_materno", DbType="VarChar(20)")]
		public string cli_materno
		{
			get
			{
				return this._cli_materno;
			}
			set
			{
				if ((this._cli_materno != value))
				{
					this.Oncli_maternoChanging(value);
					this.SendPropertyChanging();
					this._cli_materno = value;
					this.SendPropertyChanged("cli_materno");
					this.Oncli_maternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_direccion", DbType="VarChar(30)")]
		public string cli_direccion
		{
			get
			{
				return this._cli_direccion;
			}
			set
			{
				if ((this._cli_direccion != value))
				{
					this.Oncli_direccionChanging(value);
					this.SendPropertyChanging();
					this._cli_direccion = value;
					this.SendPropertyChanged("cli_direccion");
					this.Oncli_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_telefono", DbType="VarChar(30)")]
		public string cli_telefono
		{
			get
			{
				return this._cli_telefono;
			}
			set
			{
				if ((this._cli_telefono != value))
				{
					this.Oncli_telefonoChanging(value);
					this.SendPropertyChanging();
					this._cli_telefono = value;
					this.SendPropertyChanged("cli_telefono");
					this.Oncli_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_correo", DbType="VarChar(20)")]
		public string cli_correo
		{
			get
			{
				return this._cli_correo;
			}
			set
			{
				if ((this._cli_correo != value))
				{
					this.Oncli_correoChanging(value);
					this.SendPropertyChanging();
					this._cli_correo = value;
					this.SendPropertyChanged("cli_correo");
					this.Oncli_correoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Cliente_tbl_Venta", Storage="_tbl_Venta", ThisKey="cli_cod", OtherKey="cli_cod")]
		public EntitySet<tbl_Venta> tbl_Venta
		{
			get
			{
				return this._tbl_Venta;
			}
			set
			{
				this._tbl_Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Venta(tbl_Venta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Cliente = this;
		}
		
		private void detach_tbl_Venta(tbl_Venta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Compra")]
	public partial class tbl_Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _com_cod;
		
		private System.DateTime _cod_fecha;
		
		private int _prove_cod;
		
		private int _emp_ci;
		
		private EntitySet<tbl_detalleCompra> _tbl_detalleCompra;
		
		private EntityRef<tbl_Empleado> _tbl_Empleado;
		
		private EntityRef<tbl_Proveedor> _tbl_Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncom_codChanging(int value);
    partial void Oncom_codChanged();
    partial void Oncod_fechaChanging(System.DateTime value);
    partial void Oncod_fechaChanged();
    partial void Onprove_codChanging(int value);
    partial void Onprove_codChanged();
    partial void Onemp_ciChanging(int value);
    partial void Onemp_ciChanged();
    #endregion
		
		public tbl_Compra()
		{
			this._tbl_detalleCompra = new EntitySet<tbl_detalleCompra>(new Action<tbl_detalleCompra>(this.attach_tbl_detalleCompra), new Action<tbl_detalleCompra>(this.detach_tbl_detalleCompra));
			this._tbl_Empleado = default(EntityRef<tbl_Empleado>);
			this._tbl_Proveedor = default(EntityRef<tbl_Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int com_cod
		{
			get
			{
				return this._com_cod;
			}
			set
			{
				if ((this._com_cod != value))
				{
					this.Oncom_codChanging(value);
					this.SendPropertyChanging();
					this._com_cod = value;
					this.SendPropertyChanged("com_cod");
					this.Oncom_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_fecha", DbType="SmallDateTime NOT NULL")]
		public System.DateTime cod_fecha
		{
			get
			{
				return this._cod_fecha;
			}
			set
			{
				if ((this._cod_fecha != value))
				{
					this.Oncod_fechaChanging(value);
					this.SendPropertyChanging();
					this._cod_fecha = value;
					this.SendPropertyChanged("cod_fecha");
					this.Oncod_fechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_cod", DbType="Int NOT NULL")]
		public int prove_cod
		{
			get
			{
				return this._prove_cod;
			}
			set
			{
				if ((this._prove_cod != value))
				{
					if (this._tbl_Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprove_codChanging(value);
					this.SendPropertyChanging();
					this._prove_cod = value;
					this.SendPropertyChanged("prove_cod");
					this.Onprove_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_ci", DbType="Int NOT NULL")]
		public int emp_ci
		{
			get
			{
				return this._emp_ci;
			}
			set
			{
				if ((this._emp_ci != value))
				{
					if (this._tbl_Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_ciChanging(value);
					this.SendPropertyChanging();
					this._emp_ci = value;
					this.SendPropertyChanged("emp_ci");
					this.Onemp_ciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Compra_tbl_detalleCompra", Storage="_tbl_detalleCompra", ThisKey="com_cod", OtherKey="com_cod")]
		public EntitySet<tbl_detalleCompra> tbl_detalleCompra
		{
			get
			{
				return this._tbl_detalleCompra;
			}
			set
			{
				this._tbl_detalleCompra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Empleado_tbl_Compra", Storage="_tbl_Empleado", ThisKey="emp_ci", OtherKey="emp_ci", IsForeignKey=true)]
		public tbl_Empleado tbl_Empleado
		{
			get
			{
				return this._tbl_Empleado.Entity;
			}
			set
			{
				tbl_Empleado previousValue = this._tbl_Empleado.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Empleado.Entity = null;
						previousValue.tbl_Compra.Remove(this);
					}
					this._tbl_Empleado.Entity = value;
					if ((value != null))
					{
						value.tbl_Compra.Add(this);
						this._emp_ci = value.emp_ci;
					}
					else
					{
						this._emp_ci = default(int);
					}
					this.SendPropertyChanged("tbl_Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Proveedor_tbl_Compra", Storage="_tbl_Proveedor", ThisKey="prove_cod", OtherKey="prove_cod", IsForeignKey=true)]
		public tbl_Proveedor tbl_Proveedor
		{
			get
			{
				return this._tbl_Proveedor.Entity;
			}
			set
			{
				tbl_Proveedor previousValue = this._tbl_Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Proveedor.Entity = null;
						previousValue.tbl_Compra.Remove(this);
					}
					this._tbl_Proveedor.Entity = value;
					if ((value != null))
					{
						value.tbl_Compra.Add(this);
						this._prove_cod = value.prove_cod;
					}
					else
					{
						this._prove_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_detalleCompra(tbl_detalleCompra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Compra = this;
		}
		
		private void detach_tbl_detalleCompra(tbl_detalleCompra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Compra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_detalleAjuste")]
	public partial class tbl_detalleAjuste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ajt_cod;
		
		private int _med_cod;
		
		private int _daj_cantidad;
		
		private EntityRef<tbl_Ajuste> _tbl_Ajuste;
		
		private EntityRef<tbl_Medicamento> _tbl_Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onajt_codChanging(int value);
    partial void Onajt_codChanged();
    partial void Onmed_codChanging(int value);
    partial void Onmed_codChanged();
    partial void Ondaj_cantidadChanging(int value);
    partial void Ondaj_cantidadChanged();
    #endregion
		
		public tbl_detalleAjuste()
		{
			this._tbl_Ajuste = default(EntityRef<tbl_Ajuste>);
			this._tbl_Medicamento = default(EntityRef<tbl_Medicamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ajt_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ajt_cod
		{
			get
			{
				return this._ajt_cod;
			}
			set
			{
				if ((this._ajt_cod != value))
				{
					if (this._tbl_Ajuste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onajt_codChanging(value);
					this.SendPropertyChanging();
					this._ajt_cod = value;
					this.SendPropertyChanged("ajt_cod");
					this.Onajt_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					if (this._tbl_Medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmed_codChanging(value);
					this.SendPropertyChanging();
					this._med_cod = value;
					this.SendPropertyChanged("med_cod");
					this.Onmed_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daj_cantidad", DbType="Int NOT NULL")]
		public int daj_cantidad
		{
			get
			{
				return this._daj_cantidad;
			}
			set
			{
				if ((this._daj_cantidad != value))
				{
					this.Ondaj_cantidadChanging(value);
					this.SendPropertyChanging();
					this._daj_cantidad = value;
					this.SendPropertyChanged("daj_cantidad");
					this.Ondaj_cantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ajuste_tbl_detalleAjuste", Storage="_tbl_Ajuste", ThisKey="ajt_cod", OtherKey="ajt_cod", IsForeignKey=true)]
		public tbl_Ajuste tbl_Ajuste
		{
			get
			{
				return this._tbl_Ajuste.Entity;
			}
			set
			{
				tbl_Ajuste previousValue = this._tbl_Ajuste.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Ajuste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Ajuste.Entity = null;
						previousValue.tbl_detalleAjuste.Remove(this);
					}
					this._tbl_Ajuste.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleAjuste.Add(this);
						this._ajt_cod = value.ajt_cod;
					}
					else
					{
						this._ajt_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Ajuste");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleAjuste", Storage="_tbl_Medicamento", ThisKey="med_cod", OtherKey="med_cod", IsForeignKey=true)]
		public tbl_Medicamento tbl_Medicamento
		{
			get
			{
				return this._tbl_Medicamento.Entity;
			}
			set
			{
				tbl_Medicamento previousValue = this._tbl_Medicamento.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Medicamento.Entity = null;
						previousValue.tbl_detalleAjuste.Remove(this);
					}
					this._tbl_Medicamento.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleAjuste.Add(this);
						this._med_cod = value.med_cod;
					}
					else
					{
						this._med_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Medicamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_detalleCompra")]
	public partial class tbl_detalleCompra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _com_cod;
		
		private int _med_cod;
		
		private int _dco_cantidad;
		
		private decimal _dco_costo;
		
		private EntityRef<tbl_Compra> _tbl_Compra;
		
		private EntityRef<tbl_Medicamento> _tbl_Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncom_codChanging(int value);
    partial void Oncom_codChanged();
    partial void Onmed_codChanging(int value);
    partial void Onmed_codChanged();
    partial void Ondco_cantidadChanging(int value);
    partial void Ondco_cantidadChanged();
    partial void Ondco_costoChanging(decimal value);
    partial void Ondco_costoChanged();
    #endregion
		
		public tbl_detalleCompra()
		{
			this._tbl_Compra = default(EntityRef<tbl_Compra>);
			this._tbl_Medicamento = default(EntityRef<tbl_Medicamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int com_cod
		{
			get
			{
				return this._com_cod;
			}
			set
			{
				if ((this._com_cod != value))
				{
					if (this._tbl_Compra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncom_codChanging(value);
					this.SendPropertyChanging();
					this._com_cod = value;
					this.SendPropertyChanged("com_cod");
					this.Oncom_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					if (this._tbl_Medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmed_codChanging(value);
					this.SendPropertyChanging();
					this._med_cod = value;
					this.SendPropertyChanged("med_cod");
					this.Onmed_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dco_cantidad", DbType="Int NOT NULL")]
		public int dco_cantidad
		{
			get
			{
				return this._dco_cantidad;
			}
			set
			{
				if ((this._dco_cantidad != value))
				{
					this.Ondco_cantidadChanging(value);
					this.SendPropertyChanging();
					this._dco_cantidad = value;
					this.SendPropertyChanged("dco_cantidad");
					this.Ondco_cantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dco_costo", DbType="Money NOT NULL")]
		public decimal dco_costo
		{
			get
			{
				return this._dco_costo;
			}
			set
			{
				if ((this._dco_costo != value))
				{
					this.Ondco_costoChanging(value);
					this.SendPropertyChanging();
					this._dco_costo = value;
					this.SendPropertyChanged("dco_costo");
					this.Ondco_costoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Compra_tbl_detalleCompra", Storage="_tbl_Compra", ThisKey="com_cod", OtherKey="com_cod", IsForeignKey=true)]
		public tbl_Compra tbl_Compra
		{
			get
			{
				return this._tbl_Compra.Entity;
			}
			set
			{
				tbl_Compra previousValue = this._tbl_Compra.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Compra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Compra.Entity = null;
						previousValue.tbl_detalleCompra.Remove(this);
					}
					this._tbl_Compra.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleCompra.Add(this);
						this._com_cod = value.com_cod;
					}
					else
					{
						this._com_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Compra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleCompra", Storage="_tbl_Medicamento", ThisKey="med_cod", OtherKey="med_cod", IsForeignKey=true)]
		public tbl_Medicamento tbl_Medicamento
		{
			get
			{
				return this._tbl_Medicamento.Entity;
			}
			set
			{
				tbl_Medicamento previousValue = this._tbl_Medicamento.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Medicamento.Entity = null;
						previousValue.tbl_detalleCompra.Remove(this);
					}
					this._tbl_Medicamento.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleCompra.Add(this);
						this._med_cod = value.med_cod;
					}
					else
					{
						this._med_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Medicamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_detalleVenta")]
	public partial class tbl_detalleVenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ven_nrov;
		
		private int _med_cod;
		
		private int _dve_cantidad;
		
		private decimal _dve_precio;
		
		private EntityRef<tbl_Medicamento> _tbl_Medicamento;
		
		private EntityRef<tbl_Venta> _tbl_Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onven_nrovChanging(int value);
    partial void Onven_nrovChanged();
    partial void Onmed_codChanging(int value);
    partial void Onmed_codChanged();
    partial void Ondve_cantidadChanging(int value);
    partial void Ondve_cantidadChanged();
    partial void Ondve_precioChanging(decimal value);
    partial void Ondve_precioChanged();
    #endregion
		
		public tbl_detalleVenta()
		{
			this._tbl_Medicamento = default(EntityRef<tbl_Medicamento>);
			this._tbl_Venta = default(EntityRef<tbl_Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ven_nrov", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ven_nrov
		{
			get
			{
				return this._ven_nrov;
			}
			set
			{
				if ((this._ven_nrov != value))
				{
					if (this._tbl_Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onven_nrovChanging(value);
					this.SendPropertyChanging();
					this._ven_nrov = value;
					this.SendPropertyChanged("ven_nrov");
					this.Onven_nrovChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					if (this._tbl_Medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmed_codChanging(value);
					this.SendPropertyChanging();
					this._med_cod = value;
					this.SendPropertyChanged("med_cod");
					this.Onmed_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dve_cantidad", DbType="Int NOT NULL")]
		public int dve_cantidad
		{
			get
			{
				return this._dve_cantidad;
			}
			set
			{
				if ((this._dve_cantidad != value))
				{
					this.Ondve_cantidadChanging(value);
					this.SendPropertyChanging();
					this._dve_cantidad = value;
					this.SendPropertyChanged("dve_cantidad");
					this.Ondve_cantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dve_precio", DbType="Money NOT NULL")]
		public decimal dve_precio
		{
			get
			{
				return this._dve_precio;
			}
			set
			{
				if ((this._dve_precio != value))
				{
					this.Ondve_precioChanging(value);
					this.SendPropertyChanging();
					this._dve_precio = value;
					this.SendPropertyChanged("dve_precio");
					this.Ondve_precioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleVenta", Storage="_tbl_Medicamento", ThisKey="med_cod", OtherKey="med_cod", IsForeignKey=true)]
		public tbl_Medicamento tbl_Medicamento
		{
			get
			{
				return this._tbl_Medicamento.Entity;
			}
			set
			{
				tbl_Medicamento previousValue = this._tbl_Medicamento.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Medicamento.Entity = null;
						previousValue.tbl_detalleVenta.Remove(this);
					}
					this._tbl_Medicamento.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleVenta.Add(this);
						this._med_cod = value.med_cod;
					}
					else
					{
						this._med_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Medicamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Venta_tbl_detalleVenta", Storage="_tbl_Venta", ThisKey="ven_nrov", OtherKey="ven_nrov", IsForeignKey=true)]
		public tbl_Venta tbl_Venta
		{
			get
			{
				return this._tbl_Venta.Entity;
			}
			set
			{
				tbl_Venta previousValue = this._tbl_Venta.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Venta.Entity = null;
						previousValue.tbl_detalleVenta.Remove(this);
					}
					this._tbl_Venta.Entity = value;
					if ((value != null))
					{
						value.tbl_detalleVenta.Add(this);
						this._ven_nrov = value.ven_nrov;
					}
					else
					{
						this._ven_nrov = default(int);
					}
					this.SendPropertyChanged("tbl_Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Empleado")]
	public partial class tbl_Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emp_ci;
		
		private string _emp_nombre;
		
		private string _emp_paterno;
		
		private string _emp_materno;
		
		private string _emp_direccion;
		
		private System.Nullable<int> _emp_telefono;
		
		private string _emp_contraseña;
		
		private System.Nullable<char> _emp_estado;
		
		private EntitySet<tbl_Compra> _tbl_Compra;
		
		private EntitySet<tbl_Venta> _tbl_Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_ciChanging(int value);
    partial void Onemp_ciChanged();
    partial void Onemp_nombreChanging(string value);
    partial void Onemp_nombreChanged();
    partial void Onemp_paternoChanging(string value);
    partial void Onemp_paternoChanged();
    partial void Onemp_maternoChanging(string value);
    partial void Onemp_maternoChanged();
    partial void Onemp_direccionChanging(string value);
    partial void Onemp_direccionChanged();
    partial void Onemp_telefonoChanging(System.Nullable<int> value);
    partial void Onemp_telefonoChanged();
    partial void Onemp_contraseñaChanging(string value);
    partial void Onemp_contraseñaChanged();
    partial void Onemp_estadoChanging(System.Nullable<char> value);
    partial void Onemp_estadoChanged();
    #endregion
		
		public tbl_Empleado()
		{
			this._tbl_Compra = new EntitySet<tbl_Compra>(new Action<tbl_Compra>(this.attach_tbl_Compra), new Action<tbl_Compra>(this.detach_tbl_Compra));
			this._tbl_Venta = new EntitySet<tbl_Venta>(new Action<tbl_Venta>(this.attach_tbl_Venta), new Action<tbl_Venta>(this.detach_tbl_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_ci", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int emp_ci
		{
			get
			{
				return this._emp_ci;
			}
			set
			{
				if ((this._emp_ci != value))
				{
					this.Onemp_ciChanging(value);
					this.SendPropertyChanging();
					this._emp_ci = value;
					this.SendPropertyChanged("emp_ci");
					this.Onemp_ciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_nombre
		{
			get
			{
				return this._emp_nombre;
			}
			set
			{
				if ((this._emp_nombre != value))
				{
					this.Onemp_nombreChanging(value);
					this.SendPropertyChanging();
					this._emp_nombre = value;
					this.SendPropertyChanged("emp_nombre");
					this.Onemp_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_paterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_paterno
		{
			get
			{
				return this._emp_paterno;
			}
			set
			{
				if ((this._emp_paterno != value))
				{
					this.Onemp_paternoChanging(value);
					this.SendPropertyChanging();
					this._emp_paterno = value;
					this.SendPropertyChanged("emp_paterno");
					this.Onemp_paternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_materno", DbType="VarChar(30)")]
		public string emp_materno
		{
			get
			{
				return this._emp_materno;
			}
			set
			{
				if ((this._emp_materno != value))
				{
					this.Onemp_maternoChanging(value);
					this.SendPropertyChanging();
					this._emp_materno = value;
					this.SendPropertyChanged("emp_materno");
					this.Onemp_maternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_direccion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_direccion
		{
			get
			{
				return this._emp_direccion;
			}
			set
			{
				if ((this._emp_direccion != value))
				{
					this.Onemp_direccionChanging(value);
					this.SendPropertyChanging();
					this._emp_direccion = value;
					this.SendPropertyChanged("emp_direccion");
					this.Onemp_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_telefono", DbType="Int")]
		public System.Nullable<int> emp_telefono
		{
			get
			{
				return this._emp_telefono;
			}
			set
			{
				if ((this._emp_telefono != value))
				{
					this.Onemp_telefonoChanging(value);
					this.SendPropertyChanging();
					this._emp_telefono = value;
					this.SendPropertyChanged("emp_telefono");
					this.Onemp_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_contraseña", DbType="VarChar(30)")]
		public string emp_contraseña
		{
			get
			{
				return this._emp_contraseña;
			}
			set
			{
				if ((this._emp_contraseña != value))
				{
					this.Onemp_contraseñaChanging(value);
					this.SendPropertyChanging();
					this._emp_contraseña = value;
					this.SendPropertyChanged("emp_contraseña");
					this.Onemp_contraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_estado", DbType="Char(1)")]
		public System.Nullable<char> emp_estado
		{
			get
			{
				return this._emp_estado;
			}
			set
			{
				if ((this._emp_estado != value))
				{
					this.Onemp_estadoChanging(value);
					this.SendPropertyChanging();
					this._emp_estado = value;
					this.SendPropertyChanged("emp_estado");
					this.Onemp_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Empleado_tbl_Compra", Storage="_tbl_Compra", ThisKey="emp_ci", OtherKey="emp_ci")]
		public EntitySet<tbl_Compra> tbl_Compra
		{
			get
			{
				return this._tbl_Compra;
			}
			set
			{
				this._tbl_Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Empleado_tbl_Venta", Storage="_tbl_Venta", ThisKey="emp_ci", OtherKey="emp_cod")]
		public EntitySet<tbl_Venta> tbl_Venta
		{
			get
			{
				return this._tbl_Venta;
			}
			set
			{
				this._tbl_Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Compra(tbl_Compra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Empleado = this;
		}
		
		private void detach_tbl_Compra(tbl_Compra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Empleado = null;
		}
		
		private void attach_tbl_Venta(tbl_Venta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Empleado = this;
		}
		
		private void detach_tbl_Venta(tbl_Venta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Laboratorio")]
	public partial class tbl_Laboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lab_cod;
		
		private string _lab_nombre;
		
		private string _lab_direccion;
		
		private string _lab_telefono;
		
		private string _lab_email;
		
		private string _lab_web;
		
		private EntitySet<tbl_Proveedor> _tbl_Proveedor;
		
		private EntitySet<tbl_Ubicacion> _tbl_Ubicacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlab_codChanging(int value);
    partial void Onlab_codChanged();
    partial void Onlab_nombreChanging(string value);
    partial void Onlab_nombreChanged();
    partial void Onlab_direccionChanging(string value);
    partial void Onlab_direccionChanged();
    partial void Onlab_telefonoChanging(string value);
    partial void Onlab_telefonoChanged();
    partial void Onlab_emailChanging(string value);
    partial void Onlab_emailChanged();
    partial void Onlab_webChanging(string value);
    partial void Onlab_webChanged();
    #endregion
		
		public tbl_Laboratorio()
		{
			this._tbl_Proveedor = new EntitySet<tbl_Proveedor>(new Action<tbl_Proveedor>(this.attach_tbl_Proveedor), new Action<tbl_Proveedor>(this.detach_tbl_Proveedor));
			this._tbl_Ubicacion = new EntitySet<tbl_Ubicacion>(new Action<tbl_Ubicacion>(this.attach_tbl_Ubicacion), new Action<tbl_Ubicacion>(this.detach_tbl_Ubicacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lab_cod
		{
			get
			{
				return this._lab_cod;
			}
			set
			{
				if ((this._lab_cod != value))
				{
					this.Onlab_codChanging(value);
					this.SendPropertyChanging();
					this._lab_cod = value;
					this.SendPropertyChanged("lab_cod");
					this.Onlab_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lab_nombre
		{
			get
			{
				return this._lab_nombre;
			}
			set
			{
				if ((this._lab_nombre != value))
				{
					this.Onlab_nombreChanging(value);
					this.SendPropertyChanging();
					this._lab_nombre = value;
					this.SendPropertyChanged("lab_nombre");
					this.Onlab_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_direccion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string lab_direccion
		{
			get
			{
				return this._lab_direccion;
			}
			set
			{
				if ((this._lab_direccion != value))
				{
					this.Onlab_direccionChanging(value);
					this.SendPropertyChanging();
					this._lab_direccion = value;
					this.SendPropertyChanged("lab_direccion");
					this.Onlab_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_telefono", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string lab_telefono
		{
			get
			{
				return this._lab_telefono;
			}
			set
			{
				if ((this._lab_telefono != value))
				{
					this.Onlab_telefonoChanging(value);
					this.SendPropertyChanging();
					this._lab_telefono = value;
					this.SendPropertyChanged("lab_telefono");
					this.Onlab_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_email", DbType="VarChar(30)")]
		public string lab_email
		{
			get
			{
				return this._lab_email;
			}
			set
			{
				if ((this._lab_email != value))
				{
					this.Onlab_emailChanging(value);
					this.SendPropertyChanging();
					this._lab_email = value;
					this.SendPropertyChanged("lab_email");
					this.Onlab_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_web", DbType="VarChar(30)")]
		public string lab_web
		{
			get
			{
				return this._lab_web;
			}
			set
			{
				if ((this._lab_web != value))
				{
					this.Onlab_webChanging(value);
					this.SendPropertyChanging();
					this._lab_web = value;
					this.SendPropertyChanged("lab_web");
					this.Onlab_webChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Laboratorio_tbl_Proveedor", Storage="_tbl_Proveedor", ThisKey="lab_cod", OtherKey="lab_cod")]
		public EntitySet<tbl_Proveedor> tbl_Proveedor
		{
			get
			{
				return this._tbl_Proveedor;
			}
			set
			{
				this._tbl_Proveedor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Laboratorio_tbl_Ubicacion", Storage="_tbl_Ubicacion", ThisKey="lab_cod", OtherKey="lab_cod")]
		public EntitySet<tbl_Ubicacion> tbl_Ubicacion
		{
			get
			{
				return this._tbl_Ubicacion;
			}
			set
			{
				this._tbl_Ubicacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Proveedor(tbl_Proveedor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Laboratorio = this;
		}
		
		private void detach_tbl_Proveedor(tbl_Proveedor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Laboratorio = null;
		}
		
		private void attach_tbl_Ubicacion(tbl_Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Laboratorio = this;
		}
		
		private void detach_tbl_Ubicacion(tbl_Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Laboratorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Medicamento")]
	public partial class tbl_Medicamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _med_cod;
		
		private string _med_nombre;
		
		private decimal _med_precio;
		
		private System.Data.Linq.Binary _med_foto;
		
		private int _med_stock;
		
		private System.Nullable<int> _cat_cod;
		
		private EntitySet<tbl_detalleAjuste> _tbl_detalleAjuste;
		
		private EntitySet<tbl_detalleCompra> _tbl_detalleCompra;
		
		private EntitySet<tbl_detalleVenta> _tbl_detalleVenta;
		
		private EntitySet<tbl_Ubicacion> _tbl_Ubicacion;
		
		private EntityRef<tbl_Categoria> _tbl_Categoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmed_codChanging(int value);
    partial void Onmed_codChanged();
    partial void Onmed_nombreChanging(string value);
    partial void Onmed_nombreChanged();
    partial void Onmed_precioChanging(decimal value);
    partial void Onmed_precioChanged();
    partial void Onmed_fotoChanging(System.Data.Linq.Binary value);
    partial void Onmed_fotoChanged();
    partial void Onmed_stockChanging(int value);
    partial void Onmed_stockChanged();
    partial void Oncat_codChanging(System.Nullable<int> value);
    partial void Oncat_codChanged();
    #endregion
		
		public tbl_Medicamento()
		{
			this._tbl_detalleAjuste = new EntitySet<tbl_detalleAjuste>(new Action<tbl_detalleAjuste>(this.attach_tbl_detalleAjuste), new Action<tbl_detalleAjuste>(this.detach_tbl_detalleAjuste));
			this._tbl_detalleCompra = new EntitySet<tbl_detalleCompra>(new Action<tbl_detalleCompra>(this.attach_tbl_detalleCompra), new Action<tbl_detalleCompra>(this.detach_tbl_detalleCompra));
			this._tbl_detalleVenta = new EntitySet<tbl_detalleVenta>(new Action<tbl_detalleVenta>(this.attach_tbl_detalleVenta), new Action<tbl_detalleVenta>(this.detach_tbl_detalleVenta));
			this._tbl_Ubicacion = new EntitySet<tbl_Ubicacion>(new Action<tbl_Ubicacion>(this.attach_tbl_Ubicacion), new Action<tbl_Ubicacion>(this.detach_tbl_Ubicacion));
			this._tbl_Categoria = default(EntityRef<tbl_Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					this.Onmed_codChanging(value);
					this.SendPropertyChanging();
					this._med_cod = value;
					this.SendPropertyChanged("med_cod");
					this.Onmed_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string med_nombre
		{
			get
			{
				return this._med_nombre;
			}
			set
			{
				if ((this._med_nombre != value))
				{
					this.Onmed_nombreChanging(value);
					this.SendPropertyChanging();
					this._med_nombre = value;
					this.SendPropertyChanged("med_nombre");
					this.Onmed_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_precio", DbType="Money NOT NULL")]
		public decimal med_precio
		{
			get
			{
				return this._med_precio;
			}
			set
			{
				if ((this._med_precio != value))
				{
					this.Onmed_precioChanging(value);
					this.SendPropertyChanging();
					this._med_precio = value;
					this.SendPropertyChanged("med_precio");
					this.Onmed_precioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_foto", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary med_foto
		{
			get
			{
				return this._med_foto;
			}
			set
			{
				if ((this._med_foto != value))
				{
					this.Onmed_fotoChanging(value);
					this.SendPropertyChanging();
					this._med_foto = value;
					this.SendPropertyChanged("med_foto");
					this.Onmed_fotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_stock", DbType="Int NOT NULL")]
		public int med_stock
		{
			get
			{
				return this._med_stock;
			}
			set
			{
				if ((this._med_stock != value))
				{
					this.Onmed_stockChanging(value);
					this.SendPropertyChanging();
					this._med_stock = value;
					this.SendPropertyChanged("med_stock");
					this.Onmed_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_cod", DbType="Int")]
		public System.Nullable<int> cat_cod
		{
			get
			{
				return this._cat_cod;
			}
			set
			{
				if ((this._cat_cod != value))
				{
					if (this._tbl_Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_codChanging(value);
					this.SendPropertyChanging();
					this._cat_cod = value;
					this.SendPropertyChanged("cat_cod");
					this.Oncat_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleAjuste", Storage="_tbl_detalleAjuste", ThisKey="med_cod", OtherKey="med_cod")]
		public EntitySet<tbl_detalleAjuste> tbl_detalleAjuste
		{
			get
			{
				return this._tbl_detalleAjuste;
			}
			set
			{
				this._tbl_detalleAjuste.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleCompra", Storage="_tbl_detalleCompra", ThisKey="med_cod", OtherKey="med_cod")]
		public EntitySet<tbl_detalleCompra> tbl_detalleCompra
		{
			get
			{
				return this._tbl_detalleCompra;
			}
			set
			{
				this._tbl_detalleCompra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_detalleVenta", Storage="_tbl_detalleVenta", ThisKey="med_cod", OtherKey="med_cod")]
		public EntitySet<tbl_detalleVenta> tbl_detalleVenta
		{
			get
			{
				return this._tbl_detalleVenta;
			}
			set
			{
				this._tbl_detalleVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_Ubicacion", Storage="_tbl_Ubicacion", ThisKey="med_cod", OtherKey="med_cod")]
		public EntitySet<tbl_Ubicacion> tbl_Ubicacion
		{
			get
			{
				return this._tbl_Ubicacion;
			}
			set
			{
				this._tbl_Ubicacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Categoria_tbl_Medicamento", Storage="_tbl_Categoria", ThisKey="cat_cod", OtherKey="cat_cod", IsForeignKey=true)]
		public tbl_Categoria tbl_Categoria
		{
			get
			{
				return this._tbl_Categoria.Entity;
			}
			set
			{
				tbl_Categoria previousValue = this._tbl_Categoria.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Categoria.Entity = null;
						previousValue.tbl_Medicamento.Remove(this);
					}
					this._tbl_Categoria.Entity = value;
					if ((value != null))
					{
						value.tbl_Medicamento.Add(this);
						this._cat_cod = value.cat_cod;
					}
					else
					{
						this._cat_cod = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_detalleAjuste(tbl_detalleAjuste entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = this;
		}
		
		private void detach_tbl_detalleAjuste(tbl_detalleAjuste entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = null;
		}
		
		private void attach_tbl_detalleCompra(tbl_detalleCompra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = this;
		}
		
		private void detach_tbl_detalleCompra(tbl_detalleCompra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = null;
		}
		
		private void attach_tbl_detalleVenta(tbl_detalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = this;
		}
		
		private void detach_tbl_detalleVenta(tbl_detalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = null;
		}
		
		private void attach_tbl_Ubicacion(tbl_Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = this;
		}
		
		private void detach_tbl_Ubicacion(tbl_Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Medicamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Proveedor")]
	public partial class tbl_Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prove_cod;
		
		private string _prove_nombre;
		
		private string _prove_nit;
		
		private string _prove_direccion;
		
		private int _prove_telefono;
		
		private int _lab_cod;
		
		private EntitySet<tbl_Compra> _tbl_Compra;
		
		private EntityRef<tbl_Laboratorio> _tbl_Laboratorio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprove_codChanging(int value);
    partial void Onprove_codChanged();
    partial void Onprove_nombreChanging(string value);
    partial void Onprove_nombreChanged();
    partial void Onprove_nitChanging(string value);
    partial void Onprove_nitChanged();
    partial void Onprove_direccionChanging(string value);
    partial void Onprove_direccionChanged();
    partial void Onprove_telefonoChanging(int value);
    partial void Onprove_telefonoChanged();
    partial void Onlab_codChanging(int value);
    partial void Onlab_codChanged();
    #endregion
		
		public tbl_Proveedor()
		{
			this._tbl_Compra = new EntitySet<tbl_Compra>(new Action<tbl_Compra>(this.attach_tbl_Compra), new Action<tbl_Compra>(this.detach_tbl_Compra));
			this._tbl_Laboratorio = default(EntityRef<tbl_Laboratorio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_cod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prove_cod
		{
			get
			{
				return this._prove_cod;
			}
			set
			{
				if ((this._prove_cod != value))
				{
					this.Onprove_codChanging(value);
					this.SendPropertyChanging();
					this._prove_cod = value;
					this.SendPropertyChanged("prove_cod");
					this.Onprove_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string prove_nombre
		{
			get
			{
				return this._prove_nombre;
			}
			set
			{
				if ((this._prove_nombre != value))
				{
					this.Onprove_nombreChanging(value);
					this.SendPropertyChanging();
					this._prove_nombre = value;
					this.SendPropertyChanged("prove_nombre");
					this.Onprove_nombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_nit", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string prove_nit
		{
			get
			{
				return this._prove_nit;
			}
			set
			{
				if ((this._prove_nit != value))
				{
					this.Onprove_nitChanging(value);
					this.SendPropertyChanging();
					this._prove_nit = value;
					this.SendPropertyChanged("prove_nit");
					this.Onprove_nitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_direccion", DbType="VarChar(30)")]
		public string prove_direccion
		{
			get
			{
				return this._prove_direccion;
			}
			set
			{
				if ((this._prove_direccion != value))
				{
					this.Onprove_direccionChanging(value);
					this.SendPropertyChanging();
					this._prove_direccion = value;
					this.SendPropertyChanged("prove_direccion");
					this.Onprove_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_telefono", DbType="Int NOT NULL")]
		public int prove_telefono
		{
			get
			{
				return this._prove_telefono;
			}
			set
			{
				if ((this._prove_telefono != value))
				{
					this.Onprove_telefonoChanging(value);
					this.SendPropertyChanging();
					this._prove_telefono = value;
					this.SendPropertyChanged("prove_telefono");
					this.Onprove_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_cod", DbType="Int NOT NULL")]
		public int lab_cod
		{
			get
			{
				return this._lab_cod;
			}
			set
			{
				if ((this._lab_cod != value))
				{
					if (this._tbl_Laboratorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlab_codChanging(value);
					this.SendPropertyChanging();
					this._lab_cod = value;
					this.SendPropertyChanged("lab_cod");
					this.Onlab_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Proveedor_tbl_Compra", Storage="_tbl_Compra", ThisKey="prove_cod", OtherKey="prove_cod")]
		public EntitySet<tbl_Compra> tbl_Compra
		{
			get
			{
				return this._tbl_Compra;
			}
			set
			{
				this._tbl_Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Laboratorio_tbl_Proveedor", Storage="_tbl_Laboratorio", ThisKey="lab_cod", OtherKey="lab_cod", IsForeignKey=true)]
		public tbl_Laboratorio tbl_Laboratorio
		{
			get
			{
				return this._tbl_Laboratorio.Entity;
			}
			set
			{
				tbl_Laboratorio previousValue = this._tbl_Laboratorio.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Laboratorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Laboratorio.Entity = null;
						previousValue.tbl_Proveedor.Remove(this);
					}
					this._tbl_Laboratorio.Entity = value;
					if ((value != null))
					{
						value.tbl_Proveedor.Add(this);
						this._lab_cod = value.lab_cod;
					}
					else
					{
						this._lab_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Laboratorio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Compra(tbl_Compra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Proveedor = this;
		}
		
		private void detach_tbl_Compra(tbl_Compra entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Ubicacion")]
	public partial class tbl_Ubicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _med_cod;
		
		private int _lab_cod;
		
		private EntityRef<tbl_Laboratorio> _tbl_Laboratorio;
		
		private EntityRef<tbl_Medicamento> _tbl_Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmed_codChanging(int value);
    partial void Onmed_codChanged();
    partial void Onlab_codChanging(int value);
    partial void Onlab_codChanged();
    #endregion
		
		public tbl_Ubicacion()
		{
			this._tbl_Laboratorio = default(EntityRef<tbl_Laboratorio>);
			this._tbl_Medicamento = default(EntityRef<tbl_Medicamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					if (this._tbl_Medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmed_codChanging(value);
					this.SendPropertyChanging();
					this._med_cod = value;
					this.SendPropertyChanged("med_cod");
					this.Onmed_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_cod", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lab_cod
		{
			get
			{
				return this._lab_cod;
			}
			set
			{
				if ((this._lab_cod != value))
				{
					if (this._tbl_Laboratorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlab_codChanging(value);
					this.SendPropertyChanging();
					this._lab_cod = value;
					this.SendPropertyChanged("lab_cod");
					this.Onlab_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Laboratorio_tbl_Ubicacion", Storage="_tbl_Laboratorio", ThisKey="lab_cod", OtherKey="lab_cod", IsForeignKey=true)]
		public tbl_Laboratorio tbl_Laboratorio
		{
			get
			{
				return this._tbl_Laboratorio.Entity;
			}
			set
			{
				tbl_Laboratorio previousValue = this._tbl_Laboratorio.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Laboratorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Laboratorio.Entity = null;
						previousValue.tbl_Ubicacion.Remove(this);
					}
					this._tbl_Laboratorio.Entity = value;
					if ((value != null))
					{
						value.tbl_Ubicacion.Add(this);
						this._lab_cod = value.lab_cod;
					}
					else
					{
						this._lab_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Laboratorio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Medicamento_tbl_Ubicacion", Storage="_tbl_Medicamento", ThisKey="med_cod", OtherKey="med_cod", IsForeignKey=true)]
		public tbl_Medicamento tbl_Medicamento
		{
			get
			{
				return this._tbl_Medicamento.Entity;
			}
			set
			{
				tbl_Medicamento previousValue = this._tbl_Medicamento.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Medicamento.Entity = null;
						previousValue.tbl_Ubicacion.Remove(this);
					}
					this._tbl_Medicamento.Entity = value;
					if ((value != null))
					{
						value.tbl_Ubicacion.Add(this);
						this._med_cod = value.med_cod;
					}
					else
					{
						this._med_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Medicamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Venta")]
	public partial class tbl_Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ven_nrov;
		
		private System.Nullable<System.DateTime> _ven_fecha;
		
		private int _cli_cod;
		
		private int _emp_cod;
		
		private EntitySet<tbl_detalleVenta> _tbl_detalleVenta;
		
		private EntityRef<tbl_Cliente> _tbl_Cliente;
		
		private EntityRef<tbl_Empleado> _tbl_Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onven_nrovChanging(int value);
    partial void Onven_nrovChanged();
    partial void Onven_fechaChanging(System.Nullable<System.DateTime> value);
    partial void Onven_fechaChanged();
    partial void Oncli_codChanging(int value);
    partial void Oncli_codChanged();
    partial void Onemp_codChanging(int value);
    partial void Onemp_codChanged();
    #endregion
		
		public tbl_Venta()
		{
			this._tbl_detalleVenta = new EntitySet<tbl_detalleVenta>(new Action<tbl_detalleVenta>(this.attach_tbl_detalleVenta), new Action<tbl_detalleVenta>(this.detach_tbl_detalleVenta));
			this._tbl_Cliente = default(EntityRef<tbl_Cliente>);
			this._tbl_Empleado = default(EntityRef<tbl_Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ven_nrov", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ven_nrov
		{
			get
			{
				return this._ven_nrov;
			}
			set
			{
				if ((this._ven_nrov != value))
				{
					this.Onven_nrovChanging(value);
					this.SendPropertyChanging();
					this._ven_nrov = value;
					this.SendPropertyChanged("ven_nrov");
					this.Onven_nrovChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ven_fecha", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ven_fecha
		{
			get
			{
				return this._ven_fecha;
			}
			set
			{
				if ((this._ven_fecha != value))
				{
					this.Onven_fechaChanging(value);
					this.SendPropertyChanging();
					this._ven_fecha = value;
					this.SendPropertyChanged("ven_fecha");
					this.Onven_fechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cli_cod", DbType="Int NOT NULL")]
		public int cli_cod
		{
			get
			{
				return this._cli_cod;
			}
			set
			{
				if ((this._cli_cod != value))
				{
					if (this._tbl_Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncli_codChanging(value);
					this.SendPropertyChanging();
					this._cli_cod = value;
					this.SendPropertyChanged("cli_cod");
					this.Oncli_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_cod", DbType="Int NOT NULL")]
		public int emp_cod
		{
			get
			{
				return this._emp_cod;
			}
			set
			{
				if ((this._emp_cod != value))
				{
					if (this._tbl_Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_codChanging(value);
					this.SendPropertyChanging();
					this._emp_cod = value;
					this.SendPropertyChanged("emp_cod");
					this.Onemp_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Venta_tbl_detalleVenta", Storage="_tbl_detalleVenta", ThisKey="ven_nrov", OtherKey="ven_nrov")]
		public EntitySet<tbl_detalleVenta> tbl_detalleVenta
		{
			get
			{
				return this._tbl_detalleVenta;
			}
			set
			{
				this._tbl_detalleVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Cliente_tbl_Venta", Storage="_tbl_Cliente", ThisKey="cli_cod", OtherKey="cli_cod", IsForeignKey=true)]
		public tbl_Cliente tbl_Cliente
		{
			get
			{
				return this._tbl_Cliente.Entity;
			}
			set
			{
				tbl_Cliente previousValue = this._tbl_Cliente.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Cliente.Entity = null;
						previousValue.tbl_Venta.Remove(this);
					}
					this._tbl_Cliente.Entity = value;
					if ((value != null))
					{
						value.tbl_Venta.Add(this);
						this._cli_cod = value.cli_cod;
					}
					else
					{
						this._cli_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Empleado_tbl_Venta", Storage="_tbl_Empleado", ThisKey="emp_cod", OtherKey="emp_ci", IsForeignKey=true)]
		public tbl_Empleado tbl_Empleado
		{
			get
			{
				return this._tbl_Empleado.Entity;
			}
			set
			{
				tbl_Empleado previousValue = this._tbl_Empleado.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Empleado.Entity = null;
						previousValue.tbl_Venta.Remove(this);
					}
					this._tbl_Empleado.Entity = value;
					if ((value != null))
					{
						value.tbl_Venta.Add(this);
						this._emp_cod = value.emp_ci;
					}
					else
					{
						this._emp_cod = default(int);
					}
					this.SendPropertyChanged("tbl_Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_detalleVenta(tbl_detalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Venta = this;
		}
		
		private void detach_tbl_detalleVenta(tbl_detalleVenta entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Venta = null;
		}
	}
	
	public partial class mostrarEmpleadoResult
	{
		
		private int _emp_ci;
		
		private string _emp_nombre;
		
		private string _emp_paterno;
		
		private string _emp_materno;
		
		private string _emp_direccion;
		
		private System.Nullable<int> _emp_telefono;
		
		private string _emp_contraseña;
		
		private System.Nullable<char> _emp_estado;
		
		public mostrarEmpleadoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_ci", DbType="Int NOT NULL")]
		public int emp_ci
		{
			get
			{
				return this._emp_ci;
			}
			set
			{
				if ((this._emp_ci != value))
				{
					this._emp_ci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_nombre
		{
			get
			{
				return this._emp_nombre;
			}
			set
			{
				if ((this._emp_nombre != value))
				{
					this._emp_nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_paterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_paterno
		{
			get
			{
				return this._emp_paterno;
			}
			set
			{
				if ((this._emp_paterno != value))
				{
					this._emp_paterno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_materno", DbType="VarChar(30)")]
		public string emp_materno
		{
			get
			{
				return this._emp_materno;
			}
			set
			{
				if ((this._emp_materno != value))
				{
					this._emp_materno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_direccion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string emp_direccion
		{
			get
			{
				return this._emp_direccion;
			}
			set
			{
				if ((this._emp_direccion != value))
				{
					this._emp_direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_telefono", DbType="Int")]
		public System.Nullable<int> emp_telefono
		{
			get
			{
				return this._emp_telefono;
			}
			set
			{
				if ((this._emp_telefono != value))
				{
					this._emp_telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_contraseña", DbType="VarChar(30)")]
		public string emp_contraseña
		{
			get
			{
				return this._emp_contraseña;
			}
			set
			{
				if ((this._emp_contraseña != value))
				{
					this._emp_contraseña = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_estado", DbType="Char(1)")]
		public System.Nullable<char> emp_estado
		{
			get
			{
				return this._emp_estado;
			}
			set
			{
				if ((this._emp_estado != value))
				{
					this._emp_estado = value;
				}
			}
		}
	}
	
	public partial class mostrarMedicamentosResult
	{
		
		private int _med_cod;
		
		private string _med_nombre;
		
		private decimal _med_precio;
		
		private System.Data.Linq.Binary _med_foto;
		
		private int _med_stock;
		
		private System.Nullable<int> _cat_cod;
		
		public mostrarMedicamentosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_cod", DbType="Int NOT NULL")]
		public int med_cod
		{
			get
			{
				return this._med_cod;
			}
			set
			{
				if ((this._med_cod != value))
				{
					this._med_cod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string med_nombre
		{
			get
			{
				return this._med_nombre;
			}
			set
			{
				if ((this._med_nombre != value))
				{
					this._med_nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_precio", DbType="Money NOT NULL")]
		public decimal med_precio
		{
			get
			{
				return this._med_precio;
			}
			set
			{
				if ((this._med_precio != value))
				{
					this._med_precio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_foto", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary med_foto
		{
			get
			{
				return this._med_foto;
			}
			set
			{
				if ((this._med_foto != value))
				{
					this._med_foto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_stock", DbType="Int NOT NULL")]
		public int med_stock
		{
			get
			{
				return this._med_stock;
			}
			set
			{
				if ((this._med_stock != value))
				{
					this._med_stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_cod", DbType="Int")]
		public System.Nullable<int> cat_cod
		{
			get
			{
				return this._cat_cod;
			}
			set
			{
				if ((this._cat_cod != value))
				{
					this._cat_cod = value;
				}
			}
		}
	}
	
	public partial class mostrarLaboratorioResult
	{
		
		private int _lab_cod;
		
		private string _lab_nombre;
		
		private string _lab_direccion;
		
		private string _lab_telefono;
		
		private string _lab_email;
		
		private string _lab_web;
		
		public mostrarLaboratorioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_cod", DbType="Int NOT NULL")]
		public int lab_cod
		{
			get
			{
				return this._lab_cod;
			}
			set
			{
				if ((this._lab_cod != value))
				{
					this._lab_cod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lab_nombre
		{
			get
			{
				return this._lab_nombre;
			}
			set
			{
				if ((this._lab_nombre != value))
				{
					this._lab_nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_direccion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string lab_direccion
		{
			get
			{
				return this._lab_direccion;
			}
			set
			{
				if ((this._lab_direccion != value))
				{
					this._lab_direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_telefono", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string lab_telefono
		{
			get
			{
				return this._lab_telefono;
			}
			set
			{
				if ((this._lab_telefono != value))
				{
					this._lab_telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_email", DbType="VarChar(30)")]
		public string lab_email
		{
			get
			{
				return this._lab_email;
			}
			set
			{
				if ((this._lab_email != value))
				{
					this._lab_email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_web", DbType="VarChar(30)")]
		public string lab_web
		{
			get
			{
				return this._lab_web;
			}
			set
			{
				if ((this._lab_web != value))
				{
					this._lab_web = value;
				}
			}
		}
	}
	
	public partial class mostrarProveedorResult
	{
		
		private int _prove_cod;
		
		private string _prove_nombre;
		
		private string _prove_nit;
		
		private string _prove_direccion;
		
		private int _prove_telefono;
		
		private int _lab_cod;
		
		public mostrarProveedorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_cod", DbType="Int NOT NULL")]
		public int prove_cod
		{
			get
			{
				return this._prove_cod;
			}
			set
			{
				if ((this._prove_cod != value))
				{
					this._prove_cod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string prove_nombre
		{
			get
			{
				return this._prove_nombre;
			}
			set
			{
				if ((this._prove_nombre != value))
				{
					this._prove_nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_nit", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string prove_nit
		{
			get
			{
				return this._prove_nit;
			}
			set
			{
				if ((this._prove_nit != value))
				{
					this._prove_nit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_direccion", DbType="VarChar(30)")]
		public string prove_direccion
		{
			get
			{
				return this._prove_direccion;
			}
			set
			{
				if ((this._prove_direccion != value))
				{
					this._prove_direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prove_telefono", DbType="Int NOT NULL")]
		public int prove_telefono
		{
			get
			{
				return this._prove_telefono;
			}
			set
			{
				if ((this._prove_telefono != value))
				{
					this._prove_telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_cod", DbType="Int NOT NULL")]
		public int lab_cod
		{
			get
			{
				return this._lab_cod;
			}
			set
			{
				if ((this._lab_cod != value))
				{
					this._lab_cod = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
